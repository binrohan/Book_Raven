@model dynamic
@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>
<form id="newRental">
    <div class="form-group">
        <label for="customer">Customer</label>
        <div class="tt-container">
            <input id="customer" data-rule-validCustomer="true" required type="text" name="customer" value="" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label for="book">Book</label>
        <div class="tt-container">
            <input id="book" data-rule-atleastOneBook="true" type="text" name="book" value="" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <ul id="books" class="list-group">
            </ul>
        </div>
    </div>
    

    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var vm = {
                bookIds: []
            };

            // Customers
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // prefetch: '../data/films/post_1960.json',
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                vm.customerId = customer.id;
            });


            // Books
            var books = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // prefetch: '../data/films/post_1960.json',
                remote: {
                    url: '/api/books?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#book').typeahead({
                minLength: 2,
                highlight: true
            }, {
                name: 'books',
                display: 'name',
                source: books
            }).on("typeahead:select", (e, book) => {
                $('#books').append("<li class='list-group-item'>" + book.name + "</li>");
                $('#book').typeahead("val", "");
                vm.bookIds.push(book.id);
            });

            $.validator.addMethod('validCustomer', () => {
                return vm.customerId && vm.customerId !== 0;
            }, 'Please select a valid customer');

            $.validator.addMethod('atleastOneBook', () => {
                return vm.bookIds.length > 0;
            }, 'Please select atleast one book');

            var validator = $('#newRental').validate({
                submitHandler: () => {

                    $.ajax({
                        url: '/api/newRentals',
                        method: 'POST',
                        data: vm
                    }).done(() => {
                        toastr.success('Rentals successfully recorded');

                        $('#customer').typeahead('val', '');
                        $('#book').typeahead('val', '');
                        $('#books').empty();

                        vm = { bookIds: [] };
                        validator.resetForm();

                    }).fail(() => {
                        toastr.error('Something unexpected happened');
                    });

                    return false;
                }
            });
        });
    </script>    
    
}
